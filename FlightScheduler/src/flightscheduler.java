
import static java.nio.file.Files.size;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class flightscheduler extends javax.swing.JFrame {
    int s;
    
 

    public flightscheduler() {
        initComponents();
        
        pcombo.removeAllItems();
        for(String i : Passenger.getpassenger()) 
        {
            pcombo.addItem(i);
        }
       
        combof.removeAllItems();
        for (Flightdetails j : Flightdetails.getflight())
        {
            combof.addItem(j.getName());
        }
        
        combod.removeAllItems();
        for (Datet j : Datet.getdate())
        {
            combod.addItem(j.getd().toString());
        }
        
        flightchk.removeAllItems();
        for (Flightdetails j : Flightdetails.getflight())
        {
            flightchk.addItem(j.getName());
        }
        
        dstatus.removeAllItems();
        for (Datet j : Datet.getdate())
        {
            dstatus.addItem(j.getd().toString());
        }
        
        comboCust.removeAllItems();
       
        for(String i : Passenger.getpassenger()) 
        {
            comboCust.addItem(i);
        }
        comboDate.removeAllItems();
        for (Datet j : Datet.getdate())
        {
            comboDate.addItem(j.getd().toString());
        }
        CustStatus.removeAllItems();
         for(String i : Passenger.getpassenger()) 
        {
            CustStatus.addItem(i);
        }
         dropfcbox.removeAllItems();
         for (Flightdetails j : Flightdetails.getflight())
        {
            dropfcbox.addItem(j.getName());
        }
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane3 = new javax.swing.JTabbedPane();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        CustName = new javax.swing.JTextField();
        AddCustomer = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        Fname = new javax.swing.JTextField();
        seats = new javax.swing.JTextField();
        AddFlight = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        datetext = new javax.swing.JTextField();
        AddDate = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        pcombo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        combof = new javax.swing.JComboBox<>();
        bookingButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookingStatus = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        combod = new javax.swing.JComboBox<>();
        jPanel8 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        CustStatus = new javax.swing.JComboBox<>();
        CustButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        CustText = new javax.swing.JTextArea();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        flightchk = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        dstatus = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        DisplayText = new javax.swing.JTextArea();
        fstatus = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        comboCust = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        comboDate = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        CancelMsg = new javax.swing.JTextArea();
        CustRemove = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        dropfcbox = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        dropstat = new javax.swing.JTextArea();
        Dropflight = new javax.swing.JButton();

        jLabel5.setText("jLabel5");
        jTabbedPane3.addTab("tab1", jLabel5);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Flight Scheduler");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Name");

        CustName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        CustName.setText(" ");

        AddCustomer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        AddCustomer.setText("Add");
        AddCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCustomerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(CustName, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(AddCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(135, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(CustName, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addComponent(AddCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        jTabbedPane1.addTab("Add Customer", jPanel1);

        jLabel10.setText("Flight Name");

        jLabel11.setText("Number of Seats");

        AddFlight.setText("Add Flight");
        AddFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddFlightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(97, 97, 97)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Fname)
                            .addComponent(seats, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(AddFlight)))
                .addContainerGap(184, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(Fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(seats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81)
                .addComponent(AddFlight)
                .addContainerGap(89, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add Flight", jPanel5);

        jLabel14.setText("Date");

        datetext.setToolTipText("Date format is YYYY-MM-DD");

        AddDate.setText("Add");
        AddDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddDateActionPerformed(evt);
            }
        });

        jLabel17.setText("Date Format is YYYY-MM-DD");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(datetext, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(AddDate))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel17)))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(datetext, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addComponent(AddDate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addGap(21, 21, 21))
        );

        jTabbedPane1.addTab("Add Date", jPanel7);

        jLabel2.setText("Passenger");

        pcombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pcomboActionPerformed(evt);
            }
        });

        jLabel3.setText("Flight");

        bookingButton.setText("Submit Booking");
        bookingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingButtonActionPerformed(evt);
            }
        });

        bookingStatus.setColumns(20);
        bookingStatus.setRows(5);
        jScrollPane1.setViewportView(bookingStatus);

        jLabel7.setText("Date");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pcombo, 0, 77, Short.MAX_VALUE)
                    .addComponent(combof, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(121, 121, 121)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bookingButton)
                    .addComponent(combod, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(97, 97, 97))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pcombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(combod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combof, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(bookingButton)
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Perform Booking", jPanel2);

        jLabel15.setText("Customer Name ");

        CustStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        CustButton.setText("Check Status ");
        CustButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustButtonActionPerformed(evt);
            }
        });

        CustText.setColumns(20);
        CustText.setRows(5);
        jScrollPane4.setViewportView(CustText);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jLabel15)
                .addGap(71, 71, 71)
                .addComponent(CustStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(CustButton)
                .addContainerGap(34, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CustStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(CustButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        jTabbedPane1.addTab("Customer Status", jPanel8);

        jLabel6.setText("Flight ");

        flightchk.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        flightchk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightchkActionPerformed(evt);
            }
        });

        jLabel9.setText("Date");

        dstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        DisplayText.setEditable(false);
        DisplayText.setColumns(20);
        DisplayText.setRows(5);
        jScrollPane2.setViewportView(DisplayText);

        fstatus.setText("Status Flight ");
        fstatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fstatusActionPerformed(evt);
            }
        });

        jButton2.setText("Status Waitlist");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel9))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fstatus)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(flightchk, 0, 95, Short.MAX_VALUE)
                                .addComponent(dstatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jButton2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(flightchk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(dstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addGap(28, 28, 28)
                        .addComponent(fstatus)
                        .addGap(29, 29, 29)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("tab1", jPanel3);

        jTabbedPane1.addTab("Flight Status Check", jTabbedPane4);

        jLabel12.setText("Customer Name");

        comboCust.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel13.setText("Date Booked on ");

        comboDate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDateActionPerformed(evt);
            }
        });

        CancelMsg.setColumns(20);
        CancelMsg.setRows(5);
        jScrollPane3.setViewportView(CancelMsg);

        CustRemove.setText("Remove");
        CustRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addGap(33, 33, 33)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(comboCust, 0, 101, Short.MAX_VALUE)
                    .addComponent(comboDate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(243, 243, 243)
                .addComponent(CustRemove)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(comboCust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(comboDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(90, 90, 90)
                .addComponent(CustRemove)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cancel Customer Booking", jPanel6);

        jLabel16.setText("Flight Name ");

        dropfcbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        dropstat.setColumns(20);
        dropstat.setRows(5);
        jScrollPane5.setViewportView(dropstat);

        Dropflight.setText("Drop Flight");
        Dropflight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DropflightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(dropfcbox, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(Dropflight)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dropfcbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(36, 36, 36)
                        .addComponent(Dropflight))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Drop Flight", jPanel9);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Collection<Waitlist> wtch = Waitlist.getWaitingList(dstatus.getSelectedItem().toString());
        if(wtch!=null){
            String list ="Customer:\tFlight:\n" ;
            for(Waitlist wt:wtch){
                list+=wt.getCustomerName()+"\t"+wt.getwFlight()+"\n";
            }
            DisplayText.setText(list);

        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void fstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fstatusActionPerformed
        Collection<Booking> bks = Booking.getstatusFlight(flightchk.getSelectedItem().toString(),dstatus.getSelectedItem().toString());

        if(bks!=null){
            String list ="Customer:\tFlight:\n" ;
            for(Booking bk:bks){
                list+=bk.getname()+"\t"+bk.getflight()+"\n";
            }
            DisplayText.setText(list);
        }
    }//GEN-LAST:event_fstatusActionPerformed

    private void flightchkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightchkActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_flightchkActionPerformed

    private void bookingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingButtonActionPerformed
        // TODO add your handling code here:

        Booking b = new Booking (pcombo.getSelectedItem().toString(),combof.getSelectedItem().toString(),combod.getSelectedItem().toString());
        Waitlist w = new Waitlist(pcombo.getSelectedItem().toString(),combof.getSelectedItem().toString(),combod.getSelectedItem().toString());
        try {
            s = b.getFlightSeats(combof.getSelectedItem().toString(),combod.getSelectedItem().toString());
        } catch (ParseException ex) {
            Logger.getLogger(flightscheduler.class.getName()).log(Level.SEVERE, null, ex);
        }

        if( s > Flightdetails.getseat(combof.getSelectedItem().toString()))
        {
            try {
                w.addWaitlist();
                bookingStatus.setText("Sorry the flight is full and you have been added to the waitlist.");
            }

            catch (ParseException ex) {
                Logger.getLogger(flightscheduler.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(flightscheduler.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        else{

            try {
                b.addBooking();
                bookingStatus.setText("You have been added to the flight");
            } catch (ParseException ex) {

                Logger.getLogger(flightscheduler.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_bookingButtonActionPerformed

    private void pcomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pcomboActionPerformed

    }//GEN-LAST:event_pcomboActionPerformed

    private void AddCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCustomerActionPerformed
        Passenger p = new Passenger(CustName.getText());
        p.addpassenger();
        pcombo.removeAllItems();
        for(String i : Passenger.getpassenger()) {
            pcombo.addItem(i);}
        comboCust.removeAllItems();
        for(String i : Passenger.getpassenger()) {
            comboCust.addItem(i);}
         CustStatus.removeAllItems();
         for(String i : Passenger.getpassenger()) 
        {
            CustStatus.addItem(i);
        }
         JOptionPane.showMessageDialog(null, "Customer has been added", "Message", JOptionPane.PLAIN_MESSAGE);
         CustName.setText("");
    }//GEN-LAST:event_AddCustomerActionPerformed

    private void AddFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddFlightActionPerformed
        
        Flightdetails f = new Flightdetails(Fname.getText(),Integer.parseInt(seats.getText()));
        f.addflight();
        combof.removeAllItems();
        for (Flightdetails j : Flightdetails.getflight())
        {
            combof.addItem(j.getName());
        }
        flightchk.removeAllItems();
        for (Flightdetails j : Flightdetails.getflight())
        {
            flightchk.addItem(j.getName());
        }
        dropfcbox.removeAllItems();
         for (Flightdetails j : Flightdetails.getflight())
        {
            dropfcbox.addItem(j.getName());
        }
         JOptionPane.showMessageDialog(null, "Flight has been added", "Message", JOptionPane.PLAIN_MESSAGE);
         Fname.setText("");
         seats.setText("");
    }//GEN-LAST:event_AddFlightActionPerformed

    private void comboDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboDateActionPerformed

    private void CustRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustRemoveActionPerformed
        
        
        
        
       
        try {
            if (Booking.getbookedname(comboCust.getSelectedItem().toString(), comboDate.getSelectedItem().toString()))
            {
                try {
                    if (Waitlist.waitlistcheck())
                    {
                         CancelMsg.setText("Booking Removed"+"\n" + comboCust.getSelectedItem().toString()+ " booking cancel," + Waitlist.getwaitlisted(Booking.getflightname(comboCust.getSelectedItem().toString(),comboDate.getSelectedItem().toString()), comboDate.getSelectedItem().toString()) +  " booked from waitlist" );
                    
                    Booking.addBookingfromw(Waitlist.getwaitlisted(Booking.getflightname(comboCust.getSelectedItem().toString(),comboDate.getSelectedItem().toString()), comboDate.getSelectedItem().toString()), Booking.getflightname(comboCust.getSelectedItem().toString(),comboDate.getSelectedItem().toString()),  comboDate.getSelectedItem().toString());
                    Waitlist.cancelWaitlist(Waitlist.getwaitlisted(Booking.getflightname(comboCust.getSelectedItem().toString(),comboDate.getSelectedItem().toString()), comboDate.getSelectedItem().toString()),comboDate.getSelectedItem().toString());  
                    Booking.cancelBooking(comboCust.getSelectedItem().toString(),comboDate.getSelectedItem().toString());
                   // w.cancelWaitlist(comboCust.getSelectedItem().toString(),comboDate.getSelectedItem().toString());
                   
               // System.out.println();
                  
                 // System.out.println();
                    }
                    else
                    {
                         Booking.cancelBooking(comboCust.getSelectedItem().toString(),comboDate.getSelectedItem().toString());
                         CancelMsg.setText("Booking Removed");
                    }
                  
                  
                } 
                catch (ParseException ex) {
                    
                    Logger.getLogger(flightscheduler.class.getName()).log(Level.SEVERE, null, ex);
                    
                }
            }
            
            else if (Waitlist.getwaitlistname(comboCust.getSelectedItem().toString(),comboDate.getSelectedItem().toString()))
                {
                    try {
                        Waitlist.cancelWaitlist(comboCust.getSelectedItem().toString(),comboDate.getSelectedItem().toString());
                        CancelMsg.setText("Booking removed from waitlist");
                    } catch (ParseException ex) {
                        
                        Logger.getLogger(flightscheduler.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    
                }
                
            else
                {
                    CancelMsg.setText("Booking Not found");
                }
                
            }
            
         catch (ParseException ex) {
            Logger.getLogger(flightscheduler.class.getName()).log(Level.SEVERE, null, ex);
        }
       
       
      
                
      
        
        
        
    }//GEN-LAST:event_CustRemoveActionPerformed

    private void AddDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddDateActionPerformed
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        java.util.Date d1;
        try {
            d1 = sdf1.parse(datetext.getText());
            java.sql.Date sqlStartDate = new java.sql.Date(d1.getTime());
             Datet d = new Datet(sqlStartDate);
             d.addDate();
        } catch (ParseException ex) {
            Logger.getLogger(flightscheduler.class.getName()).log(Level.SEVERE, null, ex);
        }
        combod.removeAllItems();
        for (Datet j : Datet.getdate())
        {
            combod.addItem(j.getd().toString());
        }
        comboDate.removeAllItems();
        for (Datet j : Datet.getdate())
        {
            comboDate.addItem(j.getd().toString());
        }
        dstatus.removeAllItems();
        for (Datet j : Datet.getdate())
        {
            dstatus.addItem(j.getd().toString());
        }
       JOptionPane.showMessageDialog(null, "Date has been added", "Message", JOptionPane.PLAIN_MESSAGE);
         datetext.setText("");
        
    }//GEN-LAST:event_AddDateActionPerformed

    private void CustButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustButtonActionPerformed
         Collection<Booking> bks = Booking.getBookingstatus(CustStatus.getSelectedItem().toString());
         Collection<Waitlist> wtch = Waitlist.getWaitingstatus(CustStatus.getSelectedItem().toString());
       
         String list = "";
         if(bks!=null){
            
            for(Booking bk:bks){
                list+="Customer "+bk.getname()+" booked on "+ "Flight "+bk.getflight()+" on Date " + bk.getdate() +"\n";
            }
        if(wtch!=null){
            for(Waitlist wt:wtch){
                list+="Customer "+wt.getCustomerName()+" waitlisted on Flight "+wt.getwFlight()+" and Date "+wt.wdate;
            }

        }
      
            CustText.setText(list);
        }
    }//GEN-LAST:event_CustButtonActionPerformed

    private void DropflightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DropflightActionPerformed
            String list = "";
        String flight = dropfcbox.getSelectedItem().toString();
        try {
            Flightdetails.Dropflight(flight);
            List<Waitlist> droppedW = Waitlist.getWaitlistFF(flight);
            Waitlist.removeWaitlist(flight);
            
           // droppedW.forEach((w) -> {list+= "Customer"+w.getCustomerName()+ " was dropped from the waitlist.\n";});
           for(Waitlist w:droppedW){
           
           
           list+= "Customer"+w.getCustomerName()+ " was dropped from the waitlist.\n";
           
           }
           
           
           
           List<Booking> droppedPeople = Booking.getBookingsFF(flight);
            Booking.removeBookings(flight);
            List<Flightdetails> flightlist = Flightdetails.getflight();
            String[] Flights = new String[flightlist.size()];
            for (int i = 0; i < Flights.length; i++) {
                Flights[i] = flightlist.get(i).getName();
            }
            for (Booking b : droppedPeople) {
                String customer = b.getname();
                String date = b.getdate();
                boolean wasRebooked = false;
                for (String newFlight : Flights) {
                    int capacity = Flightdetails.getseat(newFlight);
                    int seatsFilled = Booking.getCountForFlightAndDay(newFlight, date);
                    if (seatsFilled < capacity) {
                        Booking.addBookingfromw(customer, newFlight, date);
                        list+=customer+" rebooked to " + newFlight+" on "+ date+"\n";
                        //dropstat.setText(customer+" rebooked to " + newFlight+" on "+ date);
                        wasRebooked = true;
                    }
                }
                if (!wasRebooked) {
                    //dropstat.setText(customer+" could not be rebooked for "+ date);
                list+=customer+" could not be rebooked for "+ date+"\n";
                }
            }
            dropstat.setText(list);
            pcombo.removeAllItems();
        for(String i : Passenger.getpassenger()) 
        {
            pcombo.addItem(i);
        }
       
        combof.removeAllItems();
        for (Flightdetails j : Flightdetails.getflight())
        {
            combof.addItem(j.getName());
        }
        
        combod.removeAllItems();
        for (Datet j : Datet.getdate())
        {
            combod.addItem(j.getd().toString());
        }
        
        flightchk.removeAllItems();
        for (Flightdetails j : Flightdetails.getflight())
        {
            flightchk.addItem(j.getName());
        }
        
        dstatus.removeAllItems();
        for (Datet j : Datet.getdate())
        {
            dstatus.addItem(j.getd().toString());
        }
        
        comboCust.removeAllItems();
       
        for(String i : Passenger.getpassenger()) 
        {
            comboCust.addItem(i);
        }
        comboDate.removeAllItems();
        for (Datet j : Datet.getdate())
        {
            comboDate.addItem(j.getd().toString());
        }
        CustStatus.removeAllItems();
         for(String i : Passenger.getpassenger()) 
        {
            CustStatus.addItem(i);
        }
         dropfcbox.removeAllItems();
         for (Flightdetails j : Flightdetails.getflight())
        {
            dropfcbox.addItem(j.getName());
        }
        
        } catch (SQLIntegrityConstraintViolationException sqlIcvEx) {
            sqlIcvEx.printStackTrace();
        } catch (SQLException sqlEx) {
            sqlEx.printStackTrace();
        } catch (ParseException ex) {
            Logger.getLogger(flightscheduler.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        /*    
        String list ="";
        
   
         for (Datet j : Datet.getdate())
        {
            ArrayList<String> droppassengers = new ArrayList();
            String DATE_FORMAT_NOW = "yyyy-MM-dd";
            SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT_NOW);
            String stringDate = sdf.format(j.getd());
            
            for (Booking b : Booking.getstatusFlight(dropfcbox.getSelectedItem().toString(), stringDate)){
                droppassengers.add(b.getname().toString());
                
         
            }
            int size = 0;
            for (Flightdetails g : Flightdetails.getflight())
            {
                
                while(!g.getName().equals( dropfcbox.getSelectedItem().toString()) && Booking.getstatusFlight(g.getName(), stringDate).size() < Flightdetails.getseat(g.getName()) &&  size < droppassengers.size() )
                {
    
                    try {
                        Booking.addBookingfromw(droppassengers.get(size),g.getName(),stringDate);
                        size = size + 1 ;
                        list+="Customer "+droppassengers.get(size)+" booked on "+ "Flight "+g.getName()+" on Date " + stringDate +"\n";
                        
                        //Booking.cancelBooking2(droppassengers.get(size),dropfcbox.getSelectedItem().toString(),stringDate );
                        //Waitlist.cancelWaitlist(droppassengers.get(size),stringDate);
                        Flightdetails.Dropflight(dropfcbox.getSelectedItem().toString());
                        dropstat.setText(list);                    } 
                    catch (ParseException ex) {
                        System.out.println("b2");
                        Logger.getLogger(flightscheduler.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (size == droppassengers.size())
                    {
                        break;
                    }
                }
            
            
            for (int x = 0; x < droppassengers.size(); x++) {
                    try {
                        Booking.cancelBooking2(droppassengers.get(x),dropfcbox.getSelectedItem().toString(),stringDate );
                    } catch (ParseException ex) {
                        Logger.getLogger(flightscheduler.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            
            }
        }
        
        
        
        
  */      
        
        
        
        
        
        
        
    }//GEN-LAST:event_DropflightActionPerformed
   /* public boolean checkflight(String p, String d)
    {
        String flightn;
       ResultSet rs;
    try{
   PreparedStatement pst = dbconnection.getConnection().prepareStatement("SELECT * FROM Booking where  Name = ? and Date =?");
    pst.setString(1,p);
     pst.setString(1,d);
    rs = pst.executeQuery();  
  if(rs.next()) {
     flightn = rs.getString(1);
     
        }
          pst.execute();  
           
     return true;

}
catch(SQLException a)
{
    return false;
}

        
        return true;
    }*/

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(flightscheduler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(flightscheduler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(flightscheduler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(flightscheduler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new flightscheduler().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddCustomer;
    private javax.swing.JButton AddDate;
    private javax.swing.JButton AddFlight;
    private javax.swing.JTextArea CancelMsg;
    private javax.swing.JButton CustButton;
    private javax.swing.JTextField CustName;
    private javax.swing.JButton CustRemove;
    private javax.swing.JComboBox<String> CustStatus;
    private javax.swing.JTextArea CustText;
    private javax.swing.JTextArea DisplayText;
    private javax.swing.JButton Dropflight;
    private javax.swing.JTextField Fname;
    private javax.swing.JButton bookingButton;
    private javax.swing.JTextArea bookingStatus;
    private javax.swing.JComboBox<String> comboCust;
    private javax.swing.JComboBox<String> comboDate;
    private javax.swing.JComboBox<String> combod;
    private javax.swing.JComboBox<String> combof;
    private javax.swing.JTextField datetext;
    private javax.swing.JComboBox<String> dropfcbox;
    private javax.swing.JTextArea dropstat;
    private javax.swing.JComboBox<String> dstatus;
    private javax.swing.JComboBox<String> flightchk;
    private javax.swing.JButton fstatus;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JComboBox<String> pcombo;
    private javax.swing.JTextField seats;
    // End of variables declaration//GEN-END:variables
}
